@model IEnumerable<Employee_Mnagement_System.Models.EmployeeModel>;

@{
    ViewData["title"] = "Employee Details";
}

<h2>@ViewData["title"]</h2>

<!-- Button trigger modal for Save Data -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#employeeModal" onclick="openEmployeeModal('save', null)">Add New Employee</button>

<!-- Modal for Save Data -->
<div class="modal fade" id="employeeModal" tabindex="-1" aria-labelledby="employeeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="employeeModalLabel">Add New Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <form>
                <div class="modal-body">

                    <div class="row">
                        <div class="col-12">
                            <input id="empId" name="Id" type="number" class="form-control" autocomplete="off" hidden>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-6">
                            <label for="firstName" class="form-label">First Name</label>
                            <input id="firstName" name="FirstName" type="text" class="form-control" autocomplete="off">
                        </div>
                        <div class="col-6">
                            <label for="lastName" class="form-label">Last Name</label>
                            <input id="lastName" name="LastName" type="text" class="form-control" autocomplete="off">
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12">
                            <label for="emailId" class="form-label">Email</label>
                            <input id="emailId" name="EmailId" type="text" class="form-control" autocomplete="off">
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-8">
                            <label for="contactNo" class="form-label">Contact No.</label>
                            <input id="contactNo" name="ContactNo" type="text" class="form-control" autocomplete="off">
                        </div>
                        <div class="col-4">
                            <label for="age" class="form-label">Age</label>
                            <input id="age" name="Age" type="text" class="form-control" autocomplete="off">
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12">
                            <label for="imageFile" class="form-label">Profile Image</label>
                            <input id="imageFile" name="imageFile" type="file" class="form-control" onchange="previewImage(this)">
                            <!-- Image preview -->
                            <img id="imagePreview" src="#" alt="Image Preview" style="max-width: 100%; max-height: 150px; margin-top: 10px; display: none;">
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button id="saveEmployeeButton" type="button" class="btn btn-success" onclick="saveEmployee()">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<hr/>

@if (Model.Any())
{
    <table class="table" id="emp-table">
        <thead>
            <tr>
                <th>Profile</th>
                <th>Employee Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Contact No</th>
                <th>Email Id</th>
                <th>Age</th>
                <th>Actions</th>
            </tr>
        </thead>


    </table>
}
else
{
    <h2>No Data Available</h2>
}

<script>

    $(document).ready(function () {
        debugger;
        get();
    });

    function get() {

        // Destroy the existing DataTable
        if ($.fn.DataTable.isDataTable('#emp-table')) {
            $('#emp-table').DataTable().destroy();
        }

        $.ajax({
            type: "GET",
            url: "/EmployeeManagement/EmployeesList",
            success: function (data) {
                $('#emp-table').DataTable({
                    data: data,
                    columns: [
                        {
                            data: 'profileImage',
                            render: function (data, type, row) {
                                return '<img src="/images/' + data + '" width="25" height="25" alt="Image" />';
                            }
                        },
                        { data: 'id' },
                        { data: 'firstName' },
                        { data: 'lastName' },
                        { data: 'emailId' },
                        { data: 'contactNo' },
                        { data: 'age' },
                        {
                            data: null,
                            render: function (data, type, row) {
                                return '<button type="button" onclick="openEmployeeModal(\'edit\', ' + row.id + ')" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#employeeModal">Edit</button> | <button type="button" onclick="deleteEmployee(' + row.id + ')" class="btn btn-primary btn-sm">Delete</button>';
                            }
                        }
                    ]
                });
            }
        });
    }

    // Function for save anew employee
    function saveEmployee() {

        var employeeData = {
            FirstName: $('#firstName').val(),
            LastName: $('#lastName').val(),
            EmailId: $('#emailId').val(),
            ContactNo: $('#contactNo').val(),
            Age: $('#age').val(),
        }

        var formData = new FormData();
        formData.append("model", JSON.stringify(employeeData));
        formData.append("file", $("#imageFile")[0].files[0]);

        $.ajax({
            type: "POST",
            url: "/EmployeeManagement/Create",
            data: formData,
            contentType: false,
            processData: false,
            Cache: false,
            success: function (data) {
                console.log("Employee saved successfully!");

                // Clear the form fields
                $('empId').val('');
                $('#firstName').val('');
                $('#lastName').val('');
                $('#emailId').val('');
                $('#contactNo').val('');
                $('#age').val('');
                $('#imageFile').val('');
                $('#imagePreview').attr('src', '').hide();

                $('#employeeModal').modal('hide');
                
                // Reload the DataTable
                get();

            },
            error: function (error) {
                console.error("Error saving employee:", error);
            }
        });
    }

    function previewImage(input) {
        var file = input.files[0];

        if (file) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#imagePreview').attr('src', e.target.result).show();
            };

            reader.readAsDataURL(file);
        } else {
            // Clear the image preview if no file is selected
            $('#imagePreview').attr('src', '').hide();
        }
    }

    // Function for update employee
    // Function to populate form fields by ID
    function populateUpdateModal(employeeId) {
        debugger;
        $.ajax({
            type: "GET",
            url: "/EmployeeManagement/populateEditData/" + employeeId, // Update URL based on your routing
            success: function (employee) {

                // Populate form fields with employee details
                $('#empId').val(employee.id);
                $('#firstName').val(employee.firstName);
                $('#lastName').val(employee.lastName);
                $('#emailId').val(employee.emailId);
                $('#contactNo').val(employee.contactNo);
                $('#age').val(employee.age);

                var imagePreview = employee.profileImage
                    ? '/images/' + employee.profileImage
                    : 'Upload Image';
                $('#imagePreview').attr('src', imagePreview).show();


                // $('#imageFile').val(employee.profileImage);
            },
            error: function (error) {
                console.error("Error fetching employee details:", error);
            }
        });

    }

    // Function for update employee
    function updateEmployee() {
        var employeeId = {
            Id: $('#empId').val()
        };

        debugger;

        var employeeData = {
            FirstName: $('#firstName').val(),
            LastName: $('#lastName').val(),
            EmailId: $('#emailId').val(),
            ContactNo: $('#contactNo').val(),
            Age: $('#age').val(),
        };

        debugger;

        var formData = new FormData();
        formData.append("Id", employeeId.Id);
        formData.append("model", JSON.stringify(employeeData));
        formData.append("file", $("#imageFile")[0].files[0]);

        debugger;

        $.ajax({
            type: "POST",
            url: "/EmployeeManagement/Edit",
            data: formData,
            contentType: false,
            processData: false,
            success: function (data) {
                // Assuming the controller returns a JSON result, check for success or error
                if (data === "Index") {
                    alert("Employee updated successfully!");
                    $('#employeeModal').modal('hide');
                    
                    get();

                } else {
                    // Handle errors or show appropriate messages
                    console.error("Error updating employee:", data);
                    alert("Failed to update employee. Please check the console for details.");
                }
            },
            error: function (error) {
                console.error("Error updating employee:", error);
                alert("Failed to update employee. Please check the console for details.");
            },
        });
    }

    function clearForm() {
        // Clear form fields here
        $('#empId').val('');
        $('#firstName').val('');
        $('#lastName').val('');
        $('#emailId').val('');
        $('#contactNo').val('');
        $('#age').val('');
        $('#imageFile').val('');
        $('#imagePreview').attr('src', '').hide();
    }

    // Function to open the employee modal based on action ('save' or 'edit')
    function openEmployeeModal(action, employeeId) {
        console.log('Action:', action);

        if (action === 'save') {

            // Set modal title for 'save' action
            $('#employeeModalLabel').text('Addd New Employee');

            // Clear form fields when opening for 'save' action
            clearForm();

            // Set onclick event for the Save button
            $('#saveEmployeeButton')
                .attr('onclick', 'saveEmployee()')
                .text('Save Changes');

        } else if (action === 'edit') {

            // Set modal title for 'edit' action
            $('#employeeModalLabel').text('Update Employee');

            // Populate the update modal with existing employee data
            populateUpdateModal(employeeId);

            // Set onclick event for the Save button
            $('#saveEmployeeButton')
                .attr('onclick', 'updateEmployee()')
                .text('Update Changes');

        }

        // Open the modal
        $('#employeeModal').modal('show');
    }

    // Function for delete existing new employee
    function deleteEmployee(employeeId) {
        if (confirm("Are you sure you want to delete this employee?")) {
            $.ajax({
                type: "POST", // or "GET" depending on your server-side implementation
                url: "/EmployeeManagement/Delete/" + employeeId,
                success: function (data) {
                    alert("Employee deleted successfully!");
                    
                    get();
                },
                error: function (error) {
                    console.error("Error deleting employee:", error);
                }
            });
        }
    }

</script>


